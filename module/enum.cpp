#include <emscripten/bind.h>
#include <libexif/exif-byte-order.h>
#include <libexif/exif-data-type.h>
#include <libexif/exif-data.h>
#include <libexif/exif-format.h>
#include <libexif/exif-ifd.h>
#include <libexif/exif-log.h>
#include <libexif/exif-tag.h>

using namespace emscripten;

/**
 * `EXIF_TAG_GPS_*` are defined in `libexif/exif-tag.h` as macros, which
 * would be inconvenient to use in JavaScript. Since we cannot use C-style enums
 * without a name conflict, define a new C++ enum with the values defined by the
 * macros.
 */
enum class ExifTagGps : uint16_t {
  VERSION_ID = EXIF_TAG_GPS_VERSION_ID,
  LATITUDE_REF = EXIF_TAG_GPS_LATITUDE_REF,
  LATITUDE = EXIF_TAG_GPS_LATITUDE,
  LONGITUDE_REF = EXIF_TAG_GPS_LONGITUDE_REF,
  LONGITUDE = EXIF_TAG_GPS_LONGITUDE,
  ALTITUDE_REF = EXIF_TAG_GPS_ALTITUDE_REF,
  ALTITUDE = EXIF_TAG_GPS_ALTITUDE,
  TIME_STAMP = EXIF_TAG_GPS_TIME_STAMP,
  SATELLITES = EXIF_TAG_GPS_SATELLITES,
  STATUS = EXIF_TAG_GPS_STATUS,
  MEASURE_MODE = EXIF_TAG_GPS_MEASURE_MODE,
  DOP = EXIF_TAG_GPS_DOP,
  SPEED_REF = EXIF_TAG_GPS_SPEED_REF,
  SPEED = EXIF_TAG_GPS_SPEED,
  TRACK_REF = EXIF_TAG_GPS_TRACK_REF,
  TRACK = EXIF_TAG_GPS_TRACK,
  IMG_DIRECTION_REF = EXIF_TAG_GPS_IMG_DIRECTION_REF,
  IMG_DIRECTION = EXIF_TAG_GPS_IMG_DIRECTION,
  MAP_DATUM = EXIF_TAG_GPS_MAP_DATUM,
  DEST_LATITUDE_REF = EXIF_TAG_GPS_DEST_LATITUDE_REF,
  DEST_LATITUDE = EXIF_TAG_GPS_DEST_LATITUDE,
  DEST_LONGITUDE_REF = EXIF_TAG_GPS_DEST_LONGITUDE_REF,
  DEST_LONGITUDE = EXIF_TAG_GPS_DEST_LONGITUDE,
  DEST_BEARING_REF = EXIF_TAG_GPS_DEST_BEARING_REF,
  DEST_BEARING = EXIF_TAG_GPS_DEST_BEARING,
  DEST_DISTANCE_REF = EXIF_TAG_GPS_DEST_DISTANCE_REF,
  DEST_DISTANCE = EXIF_TAG_GPS_DEST_DISTANCE,
  PROCESSING_METHOD = EXIF_TAG_GPS_PROCESSING_METHOD,
  AREA_INFORMATION = EXIF_TAG_GPS_AREA_INFORMATION,
  DATE_STAMP = EXIF_TAG_GPS_DATE_STAMP,
  DIFFERENTIAL = EXIF_TAG_GPS_DIFFERENTIAL,
  H_POSITIONING_ERROR = EXIF_TAG_GPS_H_POSITIONING_ERROR
};

EMSCRIPTEN_BINDINGS(Enum) {
  // <libexif/exif-byte-order.h>
  enum_<ExifByteOrder>("ExifByteOrder")
      .value("MOTOROLA", EXIF_BYTE_ORDER_MOTOROLA)
      .value("INTEL", EXIF_BYTE_ORDER_INTEL);
  // <libexif/exif-data-type.h>
  enum_<ExifDataType>("ExifDataType")
      .value("UNCOMPRESSED_CHUNKY", EXIF_DATA_TYPE_UNCOMPRESSED_CHUNKY)
      .value("UNCOMPRESSED_PLANAR", EXIF_DATA_TYPE_UNCOMPRESSED_PLANAR)
      .value("UNCOMPRESSED_YCC", EXIF_DATA_TYPE_UNCOMPRESSED_YCC)
      .value("COMPRESSED", EXIF_DATA_TYPE_COMPRESSED)
      .value("COUNT", EXIF_DATA_TYPE_COUNT)
      .value("UNKNOWN", EXIF_DATA_TYPE_UNKNOWN);
  // <libexif/exif-data.h>
  enum_<ExifDataOption>("ExifDataOption")
      .value("IGNORE_UNKNOWN_TAGS", EXIF_DATA_OPTION_IGNORE_UNKNOWN_TAGS)
      .value("FOLLOW_SPECIFICATION", EXIF_DATA_OPTION_FOLLOW_SPECIFICATION)
      .value("DONT_CHANGE_MAKER_NOTE", EXIF_DATA_OPTION_DONT_CHANGE_MAKER_NOTE);
  // <libexif/exif-format.h>
  enum_<ExifFormat>("ExifFormat")
      .value("BYTE", EXIF_FORMAT_BYTE)
      .value("ASCII", EXIF_FORMAT_ASCII)
      .value("SHORT", EXIF_FORMAT_SHORT)
      .value("LONG", EXIF_FORMAT_LONG)
      .value("RATIONAL", EXIF_FORMAT_RATIONAL)
      .value("SBYTE", EXIF_FORMAT_SBYTE)
      .value("UNDEFINED", EXIF_FORMAT_UNDEFINED)
      .value("SSHORT", EXIF_FORMAT_SSHORT)
      .value("SLONG", EXIF_FORMAT_SLONG)
      .value("SRATIONAL", EXIF_FORMAT_SRATIONAL)
      .value("FLOAT", EXIF_FORMAT_FLOAT)
      .value("DOUBLE", EXIF_FORMAT_DOUBLE);
  // <libexif/exif-ifd.h>
  enum_<ExifIfd>("ExifIfd")
      .value("IFD_0", EXIF_IFD_0) // Enum keys cannot start with a number
      .value("IFD_1", EXIF_IFD_1)
      .value("EXIF", EXIF_IFD_EXIF)
      .value("GPS", EXIF_IFD_GPS)
      .value("INTEROPERABILITY", EXIF_IFD_INTEROPERABILITY)
      .value("COUNT", EXIF_IFD_COUNT);
  // <libexif/exif-log.h>
  enum_<ExifLogCode>("ExifLogCode")
      .value("NONE", EXIF_LOG_CODE_NONE)
      .value("DEBUG", EXIF_LOG_CODE_DEBUG)
      .value("NO_MEMORY", EXIF_LOG_CODE_NO_MEMORY)
      .value("CORRUPT_DATA", EXIF_LOG_CODE_CORRUPT_DATA);
  // <libexif/exif-tag.h>
  enum_<ExifTag>("ExifTag")
      .value("INTEROPERABILITY_INDEX", EXIF_TAG_INTEROPERABILITY_INDEX)
      .value("INTEROPERABILITY_VERSION", EXIF_TAG_INTEROPERABILITY_VERSION)
      .value("NEW_SUBFILE_TYPE", EXIF_TAG_NEW_SUBFILE_TYPE)
      .value("IMAGE_WIDTH", EXIF_TAG_IMAGE_WIDTH)
      .value("IMAGE_LENGTH", EXIF_TAG_IMAGE_LENGTH)
      .value("BITS_PER_SAMPLE", EXIF_TAG_BITS_PER_SAMPLE)
      .value("COMPRESSION", EXIF_TAG_COMPRESSION)
      .value("PHOTOMETRIC_INTERPRETATION", EXIF_TAG_PHOTOMETRIC_INTERPRETATION)
      .value("FILL_ORDER", EXIF_TAG_FILL_ORDER)
      .value("DOCUMENT_NAME", EXIF_TAG_DOCUMENT_NAME)
      .value("IMAGE_DESCRIPTION", EXIF_TAG_IMAGE_DESCRIPTION)
      .value("MAKE", EXIF_TAG_MAKE)
      .value("MODEL", EXIF_TAG_MODEL)
      .value("STRIP_OFFSETS", EXIF_TAG_STRIP_OFFSETS)
      .value("ORIENTATION", EXIF_TAG_ORIENTATION)
      .value("SAMPLES_PER_PIXEL", EXIF_TAG_SAMPLES_PER_PIXEL)
      .value("ROWS_PER_STRIP", EXIF_TAG_ROWS_PER_STRIP)
      .value("STRIP_BYTE_COUNTS", EXIF_TAG_STRIP_BYTE_COUNTS)
      .value("X_RESOLUTION", EXIF_TAG_X_RESOLUTION)
      .value("Y_RESOLUTION", EXIF_TAG_Y_RESOLUTION)
      .value("PLANAR_CONFIGURATION", EXIF_TAG_PLANAR_CONFIGURATION)
      .value("RESOLUTION_UNIT", EXIF_TAG_RESOLUTION_UNIT)
      .value("TRANSFER_FUNCTION", EXIF_TAG_TRANSFER_FUNCTION)
      .value("SOFTWARE", EXIF_TAG_SOFTWARE)
      .value("DATE_TIME", EXIF_TAG_DATE_TIME)
      .value("ARTIST", EXIF_TAG_ARTIST)
      .value("WHITE_POINT", EXIF_TAG_WHITE_POINT)
      .value("PRIMARY_CHROMATICITIES", EXIF_TAG_PRIMARY_CHROMATICITIES)
      .value("SUB_IFDS", EXIF_TAG_SUB_IFDS)
      .value("TRANSFER_RANGE", EXIF_TAG_TRANSFER_RANGE)
      .value("JPEG_PROC", EXIF_TAG_JPEG_PROC)
      .value("JPEG_INTERCHANGE_FORMAT", EXIF_TAG_JPEG_INTERCHANGE_FORMAT)
      .value("JPEG_INTERCHANGE_FORMAT_LENGTH",
             EXIF_TAG_JPEG_INTERCHANGE_FORMAT_LENGTH)
      .value("YCBCR_COEFFICIENTS", EXIF_TAG_YCBCR_COEFFICIENTS)
      .value("YCBCR_SUB_SAMPLING", EXIF_TAG_YCBCR_SUB_SAMPLING)
      .value("YCBCR_POSITIONING", EXIF_TAG_YCBCR_POSITIONING)
      .value("REFERENCE_BLACK_WHITE", EXIF_TAG_REFERENCE_BLACK_WHITE)
      .value("XML_PACKET", EXIF_TAG_XML_PACKET)
      .value("RELATED_IMAGE_FILE_FORMAT", EXIF_TAG_RELATED_IMAGE_FILE_FORMAT)
      .value("RELATED_IMAGE_WIDTH", EXIF_TAG_RELATED_IMAGE_WIDTH)
      .value("RELATED_IMAGE_LENGTH", EXIF_TAG_RELATED_IMAGE_LENGTH)
      .value("IMAGE_DEPTH", EXIF_TAG_IMAGE_DEPTH)
      .value("CFA_REPEAT_PATTERN_DIM", EXIF_TAG_CFA_REPEAT_PATTERN_DIM)
      .value("CFA_PATTERN", EXIF_TAG_CFA_PATTERN)
      .value("BATTERY_LEVEL", EXIF_TAG_BATTERY_LEVEL)
      .value("COPYRIGHT", EXIF_TAG_COPYRIGHT)
      .value("EXPOSURE_TIME", EXIF_TAG_EXPOSURE_TIME)
      .value("FNUMBER", EXIF_TAG_FNUMBER)
      .value("IPTC_NAA", EXIF_TAG_IPTC_NAA)
      .value("IMAGE_RESOURCES", EXIF_TAG_IMAGE_RESOURCES)
      .value("EXIF_IFD_POINTER", EXIF_TAG_EXIF_IFD_POINTER)
      .value("INTER_COLOR_PROFILE", EXIF_TAG_INTER_COLOR_PROFILE)
      .value("EXPOSURE_PROGRAM", EXIF_TAG_EXPOSURE_PROGRAM)
      .value("SPECTRAL_SENSITIVITY", EXIF_TAG_SPECTRAL_SENSITIVITY)
      .value("GPS_INFO_IFD_POINTER", EXIF_TAG_GPS_INFO_IFD_POINTER)
      .value("ISO_SPEED_RATINGS", EXIF_TAG_ISO_SPEED_RATINGS)
      .value("OECF", EXIF_TAG_OECF)
      .value("TIME_ZONE_OFFSET", EXIF_TAG_TIME_ZONE_OFFSET)
      .value("SENSITIVITY_TYPE", EXIF_TAG_SENSITIVITY_TYPE)
      .value("STANDARD_OUTPUT_SENSITIVITY",
             EXIF_TAG_STANDARD_OUTPUT_SENSITIVITY)
      .value("RECOMMENDED_EXPOSURE_INDEX", EXIF_TAG_RECOMMENDED_EXPOSURE_INDEX)
      .value("ISO_SPEED", EXIF_TAG_ISO_SPEED)
      .value("ISO_SPEEDLatitudeYYY", EXIF_TAG_ISO_SPEEDLatitudeYYY)
      .value("ISO_SPEEDLatitudeZZZ", EXIF_TAG_ISO_SPEEDLatitudeZZZ)
      .value("EXIF_VERSION", EXIF_TAG_EXIF_VERSION)
      .value("DATE_TIME_ORIGINAL", EXIF_TAG_DATE_TIME_ORIGINAL)
      .value("DATE_TIME_DIGITIZED", EXIF_TAG_DATE_TIME_DIGITIZED)
      .value("OFFSET_TIME", EXIF_TAG_OFFSET_TIME)
      .value("OFFSET_TIME_ORIGINAL", EXIF_TAG_OFFSET_TIME_ORIGINAL)
      .value("OFFSET_TIME_DIGITIZED", EXIF_TAG_OFFSET_TIME_DIGITIZED)
      .value("COMPONENTS_CONFIGURATION", EXIF_TAG_COMPONENTS_CONFIGURATION)
      .value("COMPRESSED_BITS_PER_PIXEL", EXIF_TAG_COMPRESSED_BITS_PER_PIXEL)
      .value("SHUTTER_SPEED_VALUE", EXIF_TAG_SHUTTER_SPEED_VALUE)
      .value("APERTURE_VALUE", EXIF_TAG_APERTURE_VALUE)
      .value("BRIGHTNESS_VALUE", EXIF_TAG_BRIGHTNESS_VALUE)
      .value("EXPOSURE_BIAS_VALUE", EXIF_TAG_EXPOSURE_BIAS_VALUE)
      .value("MAX_APERTURE_VALUE", EXIF_TAG_MAX_APERTURE_VALUE)
      .value("SUBJECT_DISTANCE", EXIF_TAG_SUBJECT_DISTANCE)
      .value("METERING_MODE", EXIF_TAG_METERING_MODE)
      .value("LIGHT_SOURCE", EXIF_TAG_LIGHT_SOURCE)
      .value("FLASH", EXIF_TAG_FLASH)
      .value("FOCAL_LENGTH", EXIF_TAG_FOCAL_LENGTH)
      .value("SUBJECT_AREA", EXIF_TAG_SUBJECT_AREA)
      .value("TIFF_EP_STANDARD_ID", EXIF_TAG_TIFF_EP_STANDARD_ID)
      .value("MAKER_NOTE", EXIF_TAG_MAKER_NOTE)
      .value("USER_COMMENT", EXIF_TAG_USER_COMMENT)
      .value("SUB_SEC_TIME", EXIF_TAG_SUB_SEC_TIME)
      .value("SUB_SEC_TIME_ORIGINAL", EXIF_TAG_SUB_SEC_TIME_ORIGINAL)
      .value("SUB_SEC_TIME_DIGITIZED", EXIF_TAG_SUB_SEC_TIME_DIGITIZED)
      .value("XP_TITLE", EXIF_TAG_XP_TITLE)
      .value("XP_COMMENT", EXIF_TAG_XP_COMMENT)
      .value("XP_AUTHOR", EXIF_TAG_XP_AUTHOR)
      .value("XP_KEYWORDS", EXIF_TAG_XP_KEYWORDS)
      .value("XP_SUBJECT", EXIF_TAG_XP_SUBJECT)
      .value("FLASH_PIX_VERSION", EXIF_TAG_FLASH_PIX_VERSION)
      .value("COLOR_SPACE", EXIF_TAG_COLOR_SPACE)
      .value("PIXEL_X_DIMENSION", EXIF_TAG_PIXEL_X_DIMENSION)
      .value("PIXEL_Y_DIMENSION", EXIF_TAG_PIXEL_Y_DIMENSION)
      .value("RELATED_SOUND_FILE", EXIF_TAG_RELATED_SOUND_FILE)
      .value("INTEROPERABILITY_IFD_POINTER",
             EXIF_TAG_INTEROPERABILITY_IFD_POINTER)
      .value("FLASH_ENERGY", EXIF_TAG_FLASH_ENERGY)
      .value("SPATIAL_FREQUENCY_RESPONSE", EXIF_TAG_SPATIAL_FREQUENCY_RESPONSE)
      .value("FOCAL_PLANE_X_RESOLUTION", EXIF_TAG_FOCAL_PLANE_X_RESOLUTION)
      .value("FOCAL_PLANE_Y_RESOLUTION", EXIF_TAG_FOCAL_PLANE_Y_RESOLUTION)
      .value("FOCAL_PLANE_RESOLUTION_UNIT",
             EXIF_TAG_FOCAL_PLANE_RESOLUTION_UNIT)
      .value("SUBJECT_LOCATION", EXIF_TAG_SUBJECT_LOCATION)
      .value("EXPOSURE_INDEX", EXIF_TAG_EXPOSURE_INDEX)
      .value("SENSING_METHOD", EXIF_TAG_SENSING_METHOD)
      .value("FILE_SOURCE", EXIF_TAG_FILE_SOURCE)
      .value("SCENE_TYPE", EXIF_TAG_SCENE_TYPE)
      .value("NEW_CFA_PATTERN", EXIF_TAG_NEW_CFA_PATTERN)
      .value("CUSTOM_RENDERED", EXIF_TAG_CUSTOM_RENDERED)
      .value("EXPOSURE_MODE", EXIF_TAG_EXPOSURE_MODE)
      .value("WHITE_BALANCE", EXIF_TAG_WHITE_BALANCE)
      .value("DIGITAL_ZOOM_RATIO", EXIF_TAG_DIGITAL_ZOOM_RATIO)
      .value("FOCAL_LENGTH_IN_35MM_FILM", EXIF_TAG_FOCAL_LENGTH_IN_35MM_FILM)
      .value("SCENE_CAPTURE_TYPE", EXIF_TAG_SCENE_CAPTURE_TYPE)
      .value("GAIN_CONTROL", EXIF_TAG_GAIN_CONTROL)
      .value("CONTRAST", EXIF_TAG_CONTRAST)
      .value("SATURATION", EXIF_TAG_SATURATION)
      .value("SHARPNESS", EXIF_TAG_SHARPNESS)
      .value("DEVICE_SETTING_DESCRIPTION", EXIF_TAG_DEVICE_SETTING_DESCRIPTION)
      .value("SUBJECT_DISTANCE_RANGE", EXIF_TAG_SUBJECT_DISTANCE_RANGE)
      .value("IMAGE_UNIQUE_ID", EXIF_TAG_IMAGE_UNIQUE_ID)
      .value("CAMERA_OWNER_NAME", EXIF_TAG_CAMERA_OWNER_NAME)
      .value("BODY_SERIAL_NUMBER", EXIF_TAG_BODY_SERIAL_NUMBER)
      .value("LENS_SPECIFICATION", EXIF_TAG_LENS_SPECIFICATION)
      .value("LENS_MAKE", EXIF_TAG_LENS_MAKE)
      .value("LENS_MODEL", EXIF_TAG_LENS_MODEL)
      .value("LENS_SERIAL_NUMBER", EXIF_TAG_LENS_SERIAL_NUMBER)
      .value("COMPOSITE_IMAGE", EXIF_TAG_COMPOSITE_IMAGE)
      .value("SOURCE_IMAGE_NUMBER_OF_COMPOSITE_IMAGE",
             EXIF_TAG_SOURCE_IMAGE_NUMBER_OF_COMPOSITE_IMAGE)
      .value("SOURCE_EXPOSURE_TIMES_OF_COMPOSITE_IMAGE",
             EXIF_TAG_SOURCE_EXPOSURE_TIMES_OF_COMPOSITE_IMAGE)
      .value("GAMMA", EXIF_TAG_GAMMA)
      .value("PRINT_IMAGE_MATCHING", EXIF_TAG_PRINT_IMAGE_MATCHING)
      .value("PADDING", EXIF_TAG_PADDING);
  enum_<ExifTagGps>("ExifTagGps")
      .value("VERSION_ID", ExifTagGps::VERSION_ID)
      .value("LATITUDE_REF", ExifTagGps::LATITUDE_REF)
      .value("LATITUDE", ExifTagGps::LATITUDE)
      .value("LONGITUDE_REF", ExifTagGps::LONGITUDE_REF)
      .value("LONGITUDE", ExifTagGps::LONGITUDE)
      .value("ALTITUDE_REF", ExifTagGps::ALTITUDE_REF)
      .value("ALTITUDE", ExifTagGps::ALTITUDE)
      .value("TIME_STAMP", ExifTagGps::TIME_STAMP)
      .value("SATELLITES", ExifTagGps::SATELLITES)
      .value("STATUS", ExifTagGps::STATUS)
      .value("MEASURE_MODE", ExifTagGps::MEASURE_MODE)
      .value("DOP", ExifTagGps::DOP)
      .value("SPEED_REF", ExifTagGps::SPEED_REF)
      .value("SPEED", ExifTagGps::SPEED)
      .value("TRACK_REF", ExifTagGps::TRACK_REF)
      .value("TRACK", ExifTagGps::TRACK)
      .value("IMG_DIRECTION_REF", ExifTagGps::IMG_DIRECTION_REF)
      .value("IMG_DIRECTION", ExifTagGps::IMG_DIRECTION)
      .value("MAP_DATUM", ExifTagGps::MAP_DATUM)
      .value("DEST_LATITUDE_REF", ExifTagGps::DEST_LATITUDE_REF)
      .value("DEST_LATITUDE", ExifTagGps::DEST_LATITUDE)
      .value("DEST_LONGITUDE_REF", ExifTagGps::DEST_LONGITUDE_REF)
      .value("DEST_LONGITUDE", ExifTagGps::DEST_LONGITUDE)
      .value("DEST_BEARING_REF", ExifTagGps::DEST_BEARING_REF)
      .value("DEST_BEARING", ExifTagGps::DEST_BEARING)
      .value("DEST_DISTANCE_REF", ExifTagGps::DEST_DISTANCE_REF)
      .value("DEST_DISTANCE", ExifTagGps::DEST_DISTANCE)
      .value("PROCESSING_METHOD", ExifTagGps::PROCESSING_METHOD)
      .value("AREA_INFORMATION", ExifTagGps::AREA_INFORMATION)
      .value("DATE_STAMP", ExifTagGps::DATE_STAMP)
      .value("DIFFERENTIAL", ExifTagGps::DIFFERENTIAL)
      .value("H_POSITIONING_ERROR", ExifTagGps::H_POSITIONING_ERROR);
  enum_<ExifSupportLevel>("ExifSupportLevel")
      .value("UNKNOWN", EXIF_SUPPORT_LEVEL_UNKNOWN)
      .value("NOT_RECORDED", EXIF_SUPPORT_LEVEL_NOT_RECORDED)
      .value("MANDATORY", EXIF_SUPPORT_LEVEL_MANDATORY)
      .value("OPTIONAL", EXIF_SUPPORT_LEVEL_OPTIONAL);
}
